"""
Performs TCP version scan for recon
"""
__author__ = "Maarten Schermer"

import sys,os
from os.path import dirname,abspath
import xml.etree.ElementTree as ET
from datetime import datetime

# Importing PinkWave extensions
sys.path.append(dirname(dirname(dirname(abspath(__file__)))))
from extensions.Util import Util,report,payloads

def options():
    return ['target']

def start(pentest):
    import time
    pentest.browser.timeStart = time.time()
    host = Util.getHost(pentest.target)
    reportDir = Util.getReportDir(pentest.target)

    Util.createDir(reportDir)
    Util.createDir(reportDir + "/versionscans")
    Util.createDir(reportDir + "/versionscans/tcp")
    Util.createDir(reportDir + "/versionscans/tcp/tmp")

    tmpFile = reportDir + "/versionscans/tcp/tmp/versions.xml"
    dstFile = reportDir + "/versionscans/tcp/versions.csv"
    command = "sudo nmap -sS -sV -oX %s %s" % (tmpFile,host)
    Util.shell(command)
    with open(tmpFile) as f:
        content = "".join(f.readlines())
        root = ET.fromstring(content)
        ports = root.findall('.//host/ports/port')
        csvLines = []
        today = datetime.today()
        strtime = today.strftime('%Y-%m-%d %H:%M:%S')
        for port in ports:
            portNr = port.get("portid")
            portProtocol = port.get("protocol")
            state = port.find('.//state')
            portState = state.get('state')

            service = port.find('.//service')
            portService = service.get('name')

            portProduct = service.get('product','')
            portVersion = service.get('version','')


            csvLine = '"%s","%s","%s","%s","%s","%s","%s"' % (Util.escapeQuotes(strtime),Util.escapeQuotes(portNr),Util.escapeQuotes(portProtocol),Util.escapeQuotes(portState),Util.escapeQuotes(portService),Util.escapeQuotes(portProduct),Util.escapeQuotes(portVersion))
            csvLines.append(csvLine)

    with open(dstFile,"ab+") as f:
        f.write("\n")
        for line in csvLines:
            f.write(line + "\n")
        f.write("\n")
        f.write("\n")
        f.write("\n")
        f.write("\n")
