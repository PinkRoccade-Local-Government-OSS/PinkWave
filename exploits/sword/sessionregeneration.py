"""
Logs into webapplication and verifies that session id is changed to prevent session fixation.

* Valid login required
"""
__author__ = "sword"

import sys
from os.path import dirname,abspath

# Importing PinkWave extensions
sys.path.append(dirname(dirname(dirname(abspath(__file__)))))
from extensions.Util import Util,report,payloads
import extensions.Request as Request

def labels():
    return ['A2 - Broken Authentication and Session Management']

def options():
    return ['target','requestNames','creds']

def start(pentest):
    r1 = Request.get(pentest.target)
    r2 = Request.post(pentest.target,pentest.requestNames, pentest.creds)
    if r1.cookies == r2.cookies:
        report("Cookies not altered")
