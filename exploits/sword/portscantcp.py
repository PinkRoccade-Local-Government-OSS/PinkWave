"""
Performs a TCP scan with NMAP to verify that only expected ports are open
"""
__author__ = "Maarten Schermer"

import sys,os
from os.path import dirname,abspath

# Importing PinkWave extensions
sys.path.append(dirname(dirname(dirname(abspath(__file__)))))
from extensions.Util import Util,report,payloads

def labels():
    return ['A5 - Security Misconfiguration']

def options():
    return ['target','ports']

def start(pentest):
    open_ports = []
    response = Util.shell("sudo nmap -sS %s" % Util.getHost(pentest.target))
    scan = False
    for line in response.split(os.linesep):
        line = line.strip()
        if scan and len(line) == 0:
            scan = False

        elif line[:4] == "PORT":
            scan = True

        elif scan:
            port_state_service = filter(None, line.split(" "))
            port = port_state_service[0].split("/")[0]
            state = port_state_service[1]
            if state.lower() == "open":
                open_ports.append(port)

    results = set(pentest.ports).symmetric_difference(set(open_ports))
    if len(results) != 0:
        report("Unexpected open/closed ports: " + ", ".join(str(e) for e in results))
