"""
Scan form/scripts for popular CSRF token names
"""
__author__ = "Maarten Schermer"

import sys
from os.path import dirname,abspath

# Importing PinkWave extensions
sys.path.append(dirname(dirname(dirname(abspath(__file__)))))
from extensions.Util import Util,report,payloads
import extensions.Request as Request

def labels():
    return ['A8 - Cross-Site Request Forgery (CSRF)']

def options():
    return ['target']

def start(pentest):
    tokenFound = None
    foundIn = None
    Request.get(pentest.target)

    # Scan forms
    forms = pentest.browser.driver.find_elements_by_xpath(".//form")
    if len(forms) != 0:
        for input in forms:
            content = input.get_attribute('innerHTML')
            for payload in payloads("csrftokennames",__file__):
                if payload.lower() in content.lower():
                    tokenFound = token
            foundIn = "form"

    # Scan scripts
    if tokenFound is None:
        forms = pentest.browser.driver.find_elements_by_xpath(".//script")
        for input in forms:
            content = input.get_attribute('innerHTML')
            for payload in payloads("csrftokennames",__file__):
                if payload.lower() in content.lower():
                    tokenFound = token
            foundIn = "script"

    if tokenFound is None:
        report("Potential CSRF vulnerability. No token names found in any forms")
    else:
        print "token(%s) found in %s " % ( str(tokenFound), foundIn )
