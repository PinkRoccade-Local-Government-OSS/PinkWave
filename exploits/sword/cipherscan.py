"""
Scans SSL port and tests if weak ciphers are enabled via Mozilla's cipherscan tool

"""
__author__ = "Maarten Schermer"

import sys,os,time,json
import subprocess
from os.path import dirname,abspath,isfile

# Importing PinkWave extensions
sys.path.append(dirname(dirname(dirname(abspath(__file__)))))
from extensions.Util import Util,report,payloads

# (Optional) Specify label list
def labels():
    return ['A6 - Sensitive Data Exposure']

def options():
    return ['target','ssl']

def dependencies():
    return {"cipherscan" : "https://github.com/mozilla/cipherscan"}

def start(pentest):
    warnings = []
    host = Util.getHost(pentest.target)
    script = Util.getAppDir() + "/pw_modules/cipherscan/analyze.py"
    if not isfile(script):
        raise Exception("/pw_modules/cipherscan/ module not found, please download from external source, like GitHub")

    d = Util.shell('%s -j -t %s:%s' % (script,host,pentest.ssl),ignoreShellErrors=True)
    d = json.loads(d)
    failures = d.get("failures")
    if failures is not None and len(failures) != 0:
        fubar = failures.get('fubar')
        if fubar is not None and len(fubar) != 0:
            for f in fubar:
                warnings.append(f)

        intermediate = failures.get('intermediate')
        if intermediate is not None and len(intermediate) != 0:
            for i in intermediate:
                warnings.append(i)

    if len(warnings) != 0:
        report("Warnings: %s" % ";".join(warnings))
